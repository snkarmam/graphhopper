<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <artifactId>graphhopper-core</artifactId>
    <name>GraphHopper Core</name>
    <version>11.0-SNAPSHOT</version>
    <packaging>jar</packaging>
    <description>
        GraphHopper is a fast and memory efficient Java road routing engine
        working seamlessly with OpenStreetMap data.
    </description>
    <parent>
        <groupId>com.graphhopper</groupId>
        <artifactId>graphhopper-parent</artifactId>
        <version>11.0-SNAPSHOT</version>
    </parent>

    <properties>
        <netbeans.hint.license>apache20</netbeans.hint.license>
        <!-- Make sure that we use the same format as for Helper.createFormatter.
             We cannot force the UTC TimeZone so it will just throw away the local offset or is this
             fixed due to https://issues.apache.org/jira/browse/MNG-5647 ?
        -->
        <maven.build.timestamp.format>yyyy-MM-dd'T'HH:mm:ss'Z'</maven.build.timestamp.format>
        <builddate>${maven.build.timestamp}</builddate>
    </properties>
    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
            <comments>A business-friendly OSS license</comments>
        </license>
    </licenses>
    <dependencies>
        <dependency>
            <groupId>com.graphhopper</groupId>
            <artifactId>graphhopper-web-api</artifactId>
            <version>${project.parent.version}</version>
        </dependency>
        <dependency>
            <groupId>com.carrotsearch</groupId>
            <artifactId>hppc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.codehaus.janino</groupId>
            <artifactId>janino</artifactId>
            <version>3.1.9</version>
        </dependency>
        <dependency>
            <groupId>org.locationtech.jts</groupId>
            <artifactId>jts-core</artifactId>
        </dependency>
        <!-- Jackson -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        <dependency>
            <groupId>com.graphhopper.external</groupId>
            <artifactId>jackson-datatype-jts</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-xml</artifactId>
        </dependency>
        <!-- for using CGIAR: elevation data importing via tif files-->
        <dependency>
            <groupId>org.apache.xmlgraphics</groupId>
            <artifactId>xmlgraphics-commons</artifactId>
            <version>2.7</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>de.westnordost</groupId>
            <artifactId>osm-legal-default-speeds-jvm</artifactId>
            <version>1.4</version>
            <!-- to avoid problems force older but same kotlin like we use for client-hc -->
            <exclusions>
                <exclusion>
                    <groupId>org.jetbrains.kotlin</groupId>
                    <artifactId>kotlin-stdlib-common</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.jetbrains.kotlin</groupId>
                    <artifactId>kotlin-stdlib-jdk8</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- use same kotlin version as okhttp uses in client-hc -->
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib</artifactId>
            <version>1.6.20</version>
        </dependency>

        <dependency>
            <groupId>org.openstreetmap.osmosis</groupId>
            <artifactId>osmosis-osm-binary</artifactId>
            <version>0.48.3</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <scope>test</scope>
        </dependency>






        <!-- TEST-ONLY: Faker pour générer des données dans les tests -->
        <dependency>
            <groupId>com.github.javafaker</groupId>
            <artifactId>javafaker</artifactId>
            <version>1.0.2</version>
            <scope>test</scope>
        </dependency>



        <!-- dependency de JUnit -->

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>


    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <!-- create jar with test classes to be reused in other projects -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.1.2</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>test-jar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>pl.project13.maven</groupId>
                    <artifactId>git-commit-id-plugin</artifactId>
                    <version>3.0.0</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                    </execution>
                </executions>

                <configuration>
                    <dotGitDirectory>${parent.basedir}/.git</dotGitDirectory>
                    <failOnNoGitDirectory>false</failOnNoGitDirectory>
                    <failOnUnableToExtractRepoInfo>false</failOnUnableToExtractRepoInfo>
                </configuration>
            </plugin>

            <!-- pitest commence ici -->
            <plugin>
                <groupId>org.pitest</groupId>
                <artifactId>pitest-maven</artifactId>

                <!-- version 1.20.4 -->
                <version>1.15.0</version>

                <dependencies>
                    <!-- pour  JUnit 5  -->
                    <dependency>
                        <groupId>org.pitest</groupId>
                        <artifactId>pitest-junit5-plugin</artifactId>
                        <!-- version 1.20.1 -->
                        <version>1.2.0</version>
                    </dependency>
                </dependencies>

                <configuration>
                    <targetClasses>
                        <param>com.graphhopper.util.SimpleIntDeque</param>
                    </targetClasses>
                    <targetTests>
                        <param>com.graphhopper.util.SimpleIntDequeTest</param>
                    </targetTests>

                    <verbose>true</verbose>  <!-- For debug output -->
                    <timestampedReports>false</timestampedReports>
                    <threads>2</threads>  <!-- selon la machine -->


                    <!-- augmentation de memoire  -->
                    <jvmArgs>
                        <jvmArg>-Xmx4g</jvmArg>  <!-- Start with 2 GB; increase to 4g or more if needed -->
                        <jvmArg>-Xms2g</jvmArg>
                    </jvmArgs>


                    <timeoutFactor>2.0</timeoutFactor>  <!-- Doubles default 1.25 -->
                    <timeoutConstant>5000</timeoutConstant>  <!-- Adds 5s buffer -->

                </configuration>
            </plugin>
            <!-- pitest finit ici -->

        </plugins>

        <!-- make version available at runtime via version file -->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/version</include>
                    <include>**/builddate</include>
                    <include>**/gitinfo</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>**/version</exclude>
                    <exclude>**/builddate</exclude>
                    <exclude>**/gitinfo</exclude>
                </excludes>
            </resource>
        </resources>
    </build>
</project>
